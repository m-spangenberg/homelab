user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;  # Include the MIME types
    default_type  application/octet-stream;  # Set the default MIME type

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;  # Log the access

    sendfile        on;  # Enable sendfile
    tcp_nopush      on;  # Enable TCP_NOPUSH
    tcp_nodelay     on;  # Enable TCP_NODELAY
    keepalive_timeout  65;  # Set the keepalive timeout
    types_hash_max_size 2048;  # Set the maximum size of the types hash

    # include /etc/nginx/conf.d/*.conf;  # Uncomment to include additional configuration files

    server {
        listen 80;
        server_name localhost;
        client_max_body_size 10M;  # Limit the maximum upload size to 10MB

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;  # Prevent Clickjacking
        add_header X-XSS-Protection "1; mode=block" always;  # Prevent XSS
        add_header X-Content-Type-Options "nosniff" always;  # Prevent MIME sniffing
        add_header Referrer-Policy "no-referrer-when-downgrade" always;  # Hide the URL when leaving the site
 
        # Deny access to hidden files
        location ~ /\. {
            deny all;
        }

        # Deny access to certain file types
        location ~* \.(log|sh)$ {
            deny all;
        }

        location / {
            proxy_set_header Connection '';  # Disable keep-alive
            proxy_http_version 1.1;  # Enable HTTP/1.1
            proxy_read_timeout 360s;  # Increase the timeout to 6 minutes

            proxy_set_header Host $host;  # Forward the host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward the real IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the forwarded-for header
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the scheme

            proxy_pass http://127.0.0.1:8090;  # Forward the request to the backend
        }
    }
}